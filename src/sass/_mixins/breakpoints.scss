
@mixin breakPoints($min, $max) {

  // fallback for unitless values (convert to px)
  $min: unitless($min);
  $max: unitless($max);

  @if ($min == false and $max == false) or ($max == false and $ie) {

    // if both values are false, just show the content
    @content;

  }
  @else if $min == false {

    // only show the upper limit
    @media only screen and (max-width: $max - 1) {
      @content;
    }

  } @else if $max == false {

    // from $min to infinity and beyond
    @media only screen and (min-width: $min) {
      @content;
    }

  } @else {

    // show the content between $min and $max
    @media only screen and (min-width: $min) and (max-width: $max - 1) {
      @content;
    }

  }

}


@mixin breakPointsCols {
  @if $breakPointsCols {
    [class^="show-"] { display: none; }

    @each $resMin in $breakPoints {
      @each $resMax in $breakPoints {
        @if $resMin < $resMax {
          @include breakPoints($resMin,$resMax) {

            .table-#{$resMin}-#{$resMax},
            .show-#{$resMin}-#{$resMax} {
              display: block;
            }

            .table-#{$resMin}-#{$resMax} > *,
            .table-#{$resMin}-#{$resMax} > *[class*="col-"] {
              display: block;
              width: 100%;
            }

            .hide-#{$resMin}-#{$resMax} {
              display: none;
            }

          }
        }
      } // $resMax
    } // $resMin
  }
}



@mixin hideBetweenWidths($minVal:false,$maxVal:false) {
  @include breakPoints($minVal,$maxVal) { display: none; }
}

@mixin hideBetweenHeights($minVal:false,$maxVal:false) {
  @include breakPoints($minVal,$maxVal) { display: none; }
}



@mixin showBetweenWidths($minVal:false,$maxVal:false,$displayType: block) {
  @include breakPoints($minVal,$maxVal) { display: $displayType; }
}

@mixin showBetweenHeights($minVal:false,$maxVal:false,$displayType: block) {
  @include breakPoints($minVal,$maxVal) { display: $displayType; }
}

