/* ---------------------------------------------------------------------- *\
  GENERAL PLACEHOLDERS
\* ---------------------------------------------------------------------- */

// all text based input elements (not buttons, checkboxes, radios) + selects + textarea
%generalInputBlock {
  @include font(0, false);
  min-height: rem(2.5);
  display: block;
  width: 100%;
  background: $formInputBackgroundMain;
  border: 0;
  outline: 1px solid $formInputBorderMain;
  padding: rem(0 1);
  outline-offset: initial;

  &:focus {
    outline-color: $ColorBrand3;
  }

  &.valid {
    border-right: 4px solid $colorSuccess;
  }

  &.error {
    outline-color: $colorError;
    color: $colorError;
  }
}

// insetting the inputs and textarea
%insetInputs {
  @include boxShadow(0, 0.0625, 0.0625, 0, rgba(0,0,0,0.2), true);
}



/* ---------------------------------------------------------------------- *\
  PLACEHOLDERS
  style for placeholders
\* ---------------------------------------------------------------------- */

// this must be a mixin and not a placeholder with @extend because chaining doesn't work for placeholder styling
@mixin placeholderStyle {
  @include opacity(0.4);
  font-style: italic;
  color: $colorFontDarkSoft;
}

::-webkit-input-placeholder { @include placeholderStyle; }
     :-ms-input-placeholder { @include placeholderStyle; }
         ::-moz-placeholder { @include placeholderStyle; }
          :-moz-placeholder { @include placeholderStyle; }


/* ---------------------------------------------------------------------- *\
  INPUTS
  - text, date, password, etc.
\* ---------------------------------------------------------------------- */

input {
  &[type="text"],
  &[type="password"],
  &[type="date"],
  &[type="email"]
  &[type="tel"] {
    @extend %generalInputBlock;
    @extend %insetInputs;
  }
}




/* ---------------------------------------------------------------------- *\
  TEXTAREA
\* ---------------------------------------------------------------------- */

textarea {
  @extend %generalInputBlock;
  @extend %insetInputs;

  padding-top: rem(.5);
  padding-bottom: rem(.5);
}



/* ---------------------------------------------------------------------- *\
  SELECTS
\* ---------------------------------------------------------------------- */

// select styling for both block and inline selects
%select {
  position: relative;
  height: rem(2.5);

  &:before,
  &:after {
    content: '';
    display: block;
    position: absolute;
    z-index: 1;
  }

  html:not(.ie) & {
    &:after {
      @include triangle(down, $formInputBorderMain, $selectArrowHeight $selectArrowWidth);
      @include posAbs($top: 0, $bottom: 0);
      right: $selectArrowPosRight;
      margin: auto 0;
    }
  }

  select {
    @include borderRadius(0);
    @include prefix(appearance, none, webkit moz);

    margin: 0;
    background: none;
    border: 0;
    width: 100%;
    height: 100%;
    vertical-align: middle;
    z-index: 2;
    padding: rem(0 1);

    &:-moz-focusring {
      transition: none;
      text-shadow: 0 0 0 rgb(0,0,0);
      color: transparent;
    }

    &::-ms-expand {
      display: none;
    }

    .ie & {
      padding: rem(0.5 1);
    }
  }

  option {
    padding: rem(0.5 1);
  }
}



.select {
  @extend %generalInputBlock;
  @extend %select;

  html:not(.ie) & {
    &:before {
      width: $selectIconWidth;
      height: 100%;
      top: 0;
      right: 0;
      border-left: 1px solid $formInputBorderMain;
    }
  }

  select {
    @include centerAbs();
    @include boxShadow(0, 0.0625, 0.0625, 0, rgba(0,0,0,0.1));

    &:focus {
      outline: 1px solid $ColorBrand3;
      outline-offset: 0;
    }

    &.valid { @extend .select.valid; }
    &.error {
      outline-width: 1px;
      outline-style: solid;
      @extend .select.error;
    }
  }

  &--inline {
    @extend %select;
    display: inline-block;

    html:not(.ie) & {
      &:after {
        border-top-color: $colorFontDarkSoft;
      }
    }

    select {
      border-bottom: 2px solid $colorDividerMain;
      color: $colorFontDarkSoft;
      font-weight: 600;
      padding-right: rem($selectIconWidth / 1.5);
      text-align: center;

      &.error {
        border-bottom-color: $colorError;
      }

      &.valid {
        border-bottom-color: $colorSuccess;
      }

      &:focus {
        outline: 0;
        border-bottom-color: $ColorBrand3;
      }
    }
  }

}



/* ---------------------------------------------------------------------- *\
  MESSAGES
  - .message / --error / --warning / --success
\* ---------------------------------------------------------------------- */

.message {

  &,
  &--error,
  &--warning,
  &--success {
    $borderColor: $colorMessage;

    @include boxShadow(0, 0.0625, 0.0625, 0, rgba(0,0,0,0.1));

    background: rgb(255,255,255);
    padding: rem(.7 1);
    margin-bottom: rem(2);
    position: relative;

    @include breakPoints(0, $formBreakpoint) {
      border-bottom: 4px solid $borderColor;
      text-align: center;

      &:before {
        margin: rem(0 auto 1);
      }
    }

    @include breakPoints($formBreakpoint, false) {
      border-left: 4px solid $borderColor;
      padding-left: rem(5);

      &:before {
        position: absolute;
        top: 0;
        bottom: 0;
        left: rem(1);
        margin: auto 0;
      }
    }

    & > :last-child {
      margin-bottom: 0;
    }

    &:before {
      @extend .fci-icon;

      color: $borderColor;
      display: block;
      font-size: rem(2.5);
      line-height: rem(2.5);
      height: rem(2.5);
    }

    &_title {
      @include font(2, true, 300);
      display: block;
      margin-bottom: rem(.5);
    }

  }


  // VARIATIONS
  & {
    &:before {
      @extend .fci-info;
    }
  }


  &--error {

    $borderColor: $colorError;

    &:before {
      @extend .fci-attention;
      color: $borderColor;
    }

    @include breakPoints(0, $formBreakpoint) {
      border-bottom-color: $borderColor;
    }

    @include breakPoints($formBreakpoint, false) {
      border-left: 4px solid $borderColor;
    }
  }

  &--warning {

    $borderColor: $colorWarning;

    &:before {
      @extend .fci-attention;
      color: $borderColor;
    }

    @include breakPoints(0, $formBreakpoint) {
      border-bottom-color: $borderColor;
    }

    @include breakPoints($formBreakpoint, false) {
      border-left: 4px solid $borderColor;
    }
  }


  &--success {

    $borderColor: $colorSuccess;

    &:before {
      @extend .fci-tick;
      color: $borderColor;
    }

    @include breakPoints(0, $formBreakpoint) {
      border-bottom-color: $borderColor;
    }

    @include breakPoints($formBreakpoint, false) {
      border-left: 4px solid $borderColor;
    }
  }
}




/* ---------------------------------------------------------------------- *\
  ERROR MESSAGES
\* ---------------------------------------------------------------------- */

.error-message {
  @include font(0);
  margin-top: rem(1);
  position: relative;
  width: 100%;
  color: rgb(255,255,255);
  background: $colorError;
  padding: rem(.8 1);

  &:before {
    @include triangle(up, $colorError, ($errorMessageArrowHeight * 2) $errorMessageArrowHeight);
    content: '';
    position: absolute;
    top: negative($errorMessageArrowHeight);
    left: rem(2);
  }
}



/* ---------------------------------------------------------------------- *\
  LABEL
\* ---------------------------------------------------------------------- */
%defaultLabel {
  display: block;
  font-weight: 300;
  margin-bottom: rem(0.5);

  &.required:after {
    content: '*';
    color: $ColorBrand2;
    padding-left: 0.3em;
  }
}

.form-default {
  label {
    @extend defaultLabel;
  }
}

/* ---------------------------------------------------------------------- *\
  CUSTOM CHECKBOXES AND RADIO BUTTONS
  - .form-radio / .form-checkbox if you don't want the positioning
  - .form-radio.form-radio--top/right/bottom/left if you want the positioning
\* ---------------------------------------------------------------------- */



.form {
  &-radio,
  &-checkbox {
    position: relative;

    input {
      position: absolute;
      top: 0;
      left: -9999px;
    }

    label {
      @extend %defaultLabel;

      .ui-checkbox,
      .ui-radio {
        position: relative;
        display: block;
        height: $radioAndCheckboxSize;
        width: $radioAndCheckboxSize;

        &:before,
        &:after {
          @include centerAbs(1);
          display: block;
        }

        &:before {
          z-index: 2;
        }

        &:after {
          @extend %insetElement;
          content: '';
          background: rgb(255,255,255);
          border: 1px solid $formInputBorderMain;
        }
      }
    }

    &--left { @extend %posLeft; }
    &--right { @extend %posRight; }
    &--bottom { @extend %posBottom; }
    &--top { @extend %posTop; }
  }

  &-checkbox input:focus ~ label .ui-checkbox:after,
  &-radio input:focus ~ label .ui-radio:after {
    border-color: $ColorBrand3;
  }

  &-radio {
    label {
      .ui-radio {
        &:before,
        &:after {
          @include borderRadius(50, '%');
        }

        &:before {
          content: '';
          width: 0;
          height: 0;
          background: $colorCtaPrimary;

        }
      }
    }

    input:checked ~ label .ui-radio:before {
      width: $radioAndCheckboxSize / 2;
      height: $radioAndCheckboxSize / 2;
    }

  }

  &-checkbox {
    label {
      .ui-checkbox {
        &:before {
          @extend .fci-icon;
          @extend .fci-tick;

          right: auto;
          margin: auto 0 auto 15%;
          line-height: $radioAndCheckboxSize;
          color: $colorCtaPrimary;
          overflow: hidden;
          width: 0;
        }
      }
    }

    input:checked ~ label .ui-checkbox:before {
      width: 70%;
    }
  }

}

%posLeft {
  label {
    padding-left: $checkboxPaddingSize;
    line-height: $radioAndCheckboxSize;

    .ui-radio,
    .ui-checkbox {
      position: absolute;
      top: 0;
      left: 0;
    }

  }
}

%posRight {
  label {
    padding-right: $checkboxPaddingSize;
    line-height: $radioAndCheckboxSize;
    text-align: right;

    .ui-radio,
    .ui-checkbox {
      position: absolute;
      top: 0;
      right: 0;
    }

  }
}

%posTop {
  label {
    .ui-radio,
    .ui-checkbox {
      margin: 0 auto 5px;
    }

    text-align: center;
  }
}

%posBottom {
  label {
    padding-bottom: $radioAndCheckboxSize + 5;

    .ui-radio,
    .ui-checkbox {
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      margin: 0 auto;
    }
    text-align: center;
  }
}



/* ---------------------------------------------------------------------- *\
  TOOLTIPS
  - text to click / hover goes into .tooltip_trigger
  - if tooltip_clickable, then the parent should toggle class .is-active
  - is-right if doesn't fit in left
\* ---------------------------------------------------------------------- */

.tooltip {
  position: relative;

  &_content {
    @include font(-1, true);
    @include posAbs(false, false, 100%, negative($inputTooltipArrowPadding + $inputTooltipArrowWidth), -1);
    @include boxShadow(0, 0, 0.3, 0, rgba(0,0,0,0.1));

    display: block;
    @include opacity(0);
    overflow: hidden;
    background: rgb(255,255,255);
    min-width: 220px;
    max-width: 450px;
    padding: rem(1);
    border-top: 4px solid $ColorBrand1;
    margin-bottom: rem(1);

    &:before {
      @include triangle(down, rgb(255,255,255), ($inputTooltipArrowWidth * 2) $inputTooltipArrowWidth);
      @include posAbs(false, false, -15px, $inputTooltipArrowPadding + .5);
      content: '';
    }

    &.is-right {
      left: auto;
      right: rem(negative($inputTooltipArrowPadding + $inputTooltipArrowWidth));

      &:before {
        left: auto;
        right: rem($inputTooltipArrowPadding + .5);
      }
    }
  }

  &_title {
    @include font(1);
    display: block;
    color: $ColorBrand1;
    margin-bottom: rem(.5);
  }

  &_text {
    @extend p;
    display: block;

    &:last-child {
      margin-bottom: 0;
    }
  }

  &_symbol {
    @include borderRadius(50, '%');
    display: inline-block;
    width: 1.2em;
    height: 1.2em;
    line-height: 1.2em;
    font-size: .8em;
    text-align: center;
    color: $colorFontLight;
    background: $colorCtaNav;
    cursor: pointer;
    vertical-align: middle;

    &:before {
      content: '?';
    }

    &:hover {
      background: $colorCtaPrimary;
    }
  }

  &.is-active,
  .tooltip_trigger:not(.tooltip_clickable):hover + {
    .tooltip_content {
      overflow: visible;
      @include opacity(1);
      z-index: 100;
    }
  }

  &_close {
    position: absolute;
    top: rem(1);
    right: rem(1);
    color: $colorCtaNav;

    &:hover {
      text-decoration: none;
      color: $colorCtaPrimary;
    }

    &:before {
      @extend .fci-icon;
      @extend .fci-close;
    }
  }
}
