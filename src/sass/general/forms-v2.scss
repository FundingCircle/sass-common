/* ---------------------------------------------------------------------- *\
  FORMS
\* ---------------------------------------------------------------------- */

@include keyframes(loopRotate) {
  0% {
    @include prefix(transform, rotate(0));
  }

  100% {
    @include prefix(transform, rotate(360deg));
  }
}

.wrap--form {
  @include wrapThis(true, $formBreakpoint false);
  @include breakPoints(false, $formBreakpoint) {
    & > *:not([class*="form-default"]) {
      padding-left: $defaultColsPadding;
      padding-right: $defaultColsPadding;
    }
  }

  & > h1 {
    @include font(4, true, 300);

    margin-top: rem(1);
    margin-bottom: rem(1);
  }

  & > h2 {
    @include font(2, true, 300);
    margin-bottom: rem(1);
  }

  & > h2,
  & > h2 + p {
    @extend .form-default-col--large;
    float: none;
  }
}



.form-default {
  background: rgb(233,231,229);
  padding: rem(2);
  margin: 0;

  // cols
  @include breakPoints($formBreakpoint, false) {
    @include cols($formColsRatio);

    .wrap--form & {
      float: left;
    }

    &-col {
      &--small {
        float: right;
        padding-left: rem(2);
        margin-bottom: rem(2);
      }
    };
  }

  .wrap--form & {
    @extend .form-default-col--large;
  }

  &_dob-wrap {

    @include breakPoints($bpMobilePortraitLarge, false) {
      @include table(top, false, false, 4 6 5, false, 0);
      margin-bottom: rem(2);

      & > *:nth-child(2) {
        padding: rem(0 1);
      }
    }
  }

  &_date-wrap {
    @include breakPoints($bpMobilePortraitLarge, false) {
      @include table(top, false, false, 5 3, false, 0);

      & > *:first-child {
        padding-right: rem(1);
      }
    }
  }

  &_info-box {
    background: rgb(255,255,255);
    padding: rem(1.5);

    @include breakPoints(0, $formBreakpoint) {
      border-bottom: 4px solid $ColorBrand1;
    }

    @include breakPoints($formBreakpoint, false) {
      border-left: 4px solid $ColorBrand1;
    }

    h5 {
      color: $ColorBrand1;
      @include font(0, true, 400);
    }

    p {
      @include font(-1);
    }
  }

  @include font(0);
  @extend .cl--a;

  color: $colorFontDarkSoft;
  border: 0;


  & > .btn { float: right; }

  .btn--primary:last-child {
    margin-bottom: 0;
  }

  label {
    display: block;
    font-weight: 300;
    margin-bottom: rem(0.5);

    &.required:after {
      content: '*';
      color: $ColorBrand2;
      padding-left: 0.3em;
    }
  }

  p {
    font-weight: 300;
  }

  &_wrap {
    @extend .cl--a;
    margin-bottom: rem(3);
  }


  &_element {
    position: relative;
    margin-bottom: rem(2);



    &.is-loading:before {
      content: '';
      display: block;
      background: url(path('input-loader.gif',image)) no-repeat center center;
      width: 20px;
      height: 20px;
      position: absolute;
      top: rem(.6);
      right: rem(.6);
      @include animation(loopRotate 2s linear infinite);

    }

  }






  // tooltip
  &_tooltip {

    @include font(0);
    @include boxShadow(0, 0, 0.3, 0, rgba(0,0,0,0.1));

    height: 0;
    padding: 0;
    position: relative;
    top: 0;
    left: 0;
    background: $tooltipBackground;
    color: $ColorBrand1;
    overflow: hidden;

    &:before {
      content: '';
      position: absolute;
    }

    &.is-visible {
      height: auto;
      padding: rem(.8 1);
      overflow: visible;
    }

    @include breakPoints(0, $formBreakpoint) {

      &.is-visible {
        margin-bottom: rem(1);

        &:before {
          @include triangle(down, $tooltipBackground, ($tooltipArrowHeight * 2) $tooltipArrowHeight);
          bottom: negative($tooltipArrowHeight);
          left: rem(2);
        }
      }
    };

    @include breakPoints($formBreakpoint, false) {
      width: 250px;
      position: absolute;
      left: 100%;
      margin-left: rem(1);

      &.is-visible:before {
        @include triangle(left, $tooltipBackground, ($tooltipArrowHeight * 2) $tooltipArrowHeight);
        top: rem(.8);
        left: negative($tooltipArrowHeight);
      }
    }

  }

  &_autocomplete {
    @include resetList;
    background: rgb(255,255,255);
    outline: 1px solid $ColorBrand2;

    color: $ColorBrand2;
    text-transform: uppercase;

    li {
      padding: rem(.5);
      cursor: pointer;

      &:hover,
      &:first-child {
        font-weight: 600;
      }

      &:not(:last-child) {
        border-bottom: 1px solid $ColorBrand2;
      }
    }
  }

  // chars left
  &_chars-left {
    text-align: right;
    @include font(-1);
    margin: rem(0.2 0);
  }


}





