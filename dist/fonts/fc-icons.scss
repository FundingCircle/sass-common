/* ---------------------------------------------------------------------- *\
  ICON FONT DEFINITIONS
\* ---------------------------------------------------------------------- */

$fontPath: 'fonts/' !default;

@font-face {
  font-family: "fc-icons";
  src: url('#{$fontPath}fc-icons.eot');
  src: url('#{$fontPath}fc-icons.eot?#iefix') format('eot'),
    url('#{$fontPath}fc-icons.woff') format('woff'),
    url('#{$fontPath}fc-icons.ttf') format('truetype'),
    url('#{$fontPath}fc-icons.svg#fc-icons') format('svg');
  font-weight: normal;
  font-style: normal;
}

// We need the important rule so that we don't override the icon fonts
// scss-lint:disable ImportantRule
.fci-icon:before {
  font-family: "fc-icons" !important;
  font-style: normal !important;
  font-weight: normal !important;
  font-variant: normal !important;
  text-transform: none !important;
  speak: none;
  line-height: inherit;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
// scss-lint:enable ImportantRule

[class^="fci-"]:before,
[class*=" fci-"]:before {
  @extend .fci-icon;
}

.fci-go-to-arrow:before { content: "\E001"; }
.fci-menu-icon:before { content: "\E002"; }
.fci-tick:before { content: "\E003"; }
.fci-user-icon:before { content: "\E004"; }
.fci-phone-circled:before { content: "\E005"; }
.fci-attention:before { content: "\E006"; }
.fci-info:before { content: "\E007"; }
.fci-close:before { content: "\E008"; }
.fci-transaction:before { content: "\E009"; }
.fci-dollar-sign:before { content: "\E010"; }
.fci-download-circled:before { content: "\E011"; }
.fci-arrow-full-right:before { content: "\E012"; }
.fci-search:before { content: "\E013"; }
.fci-stats:before { content: "\E014"; }
.fci-pound-sign:before { content: "\E015"; }
.fci-user:before { content: "\E016"; }


/* ---------------------------------------------------------------------- *\
  SOURCE SANS
\* ---------------------------------------------------------------------- */

$sourceSans: (
  ( folder: regular,              file: Regular,            weight: 400,  style: normal, svgID: regular       ),
  ( folder: extra-light,          file: ExtraLight,         weight: 200,  style: normal, svgID: extralight    ),
  ( folder: extra-light-italic,   file: ExtraLightIt,   weight: 200,  style: italic, svgID: XLtIt         ),
  ( folder: light,                file: Light,              weight: 300,  style: normal, svgID: light         ),
  ( folder: light-italic,         file: LightIt,        weight: 300,  style: italic, svgID: light_italic  ),
  ( folder: italic,               file: It,             weight: 400,  style: italic, svgID: italic        ),
  ( folder: bold,                 file: Bold,               weight: 700,  style: normal, svgID: bold          ),
  ( folder: bold-italic,          file: BoldIt,         weight: 700,  style: italic, svgID: bold_italic   ),
  ( folder: semi-bold,            file: Semibold,           weight: 600,  style: normal, svgID: semibold      ),
  ( folder: semi-bold-italic,     file: SemiboldIt,     weight: 600,  style: italic, svgID: SBdIt         ),
  ( folder: black,                file: Black,              weight: 800,  style: normal, svgID: black         ),
  ( folder: black-italic,         file: BlackIt,        weight: 800,  style: italic, svgID: black_italic  )
);


@each $item in $sourceSans {
  @font-face {
    font-family: 'Source Sans Pro';
    font-weight: map-get($item, weight);
    font-style: map-get($item, style);

    src: url('#{$fontPath}fonts/#{map-get($item, folder)}/SourceSansPro-#{map-get($item, file)}.eot');
    src: url('#{$fontPath}fonts/#{map-get($item, folder)}/SourceSansPro-#{map-get($item, file)}.eot?#iefix') format('embedded-opentype'),
         url('#{$fontPath}fonts/#{map-get($item, folder)}/SourceSansPro-#{map-get($item, file)}.woff2') format('woff2'),
         url('#{$fontPath}fonts/#{map-get($item, folder)}/SourceSansPro-#{map-get($item, file)}.woff') format('woff'),
         url('#{$fontPath}fonts/#{map-get($item, folder)}/SourceSansPro-#{map-get($item, file)}.ttf') format('truetype'),
         url('#{$fontPath}fonts/#{map-get($item, folder)}/SourceSansPro-#{map-get($item, file)}.svg#source_sans_pro#{map-get($item, svgID)}') format('svg');
  }
}
