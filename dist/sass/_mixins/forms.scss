$ie: true;
/* ---------------------------------------------------------------------- *\
  CUSTOM FORMS
\* ---------------------------------------------------------------------- */

$customFormBlock: form;
$customFormElement: radio, checkbox;
$customFormModifier: null, right, center-up, center-down;

@mixin customCheckboxAndRadio {

  $elementWidth: rem(1);

  %customChkRadModifiers {
    position: relative;
    text-align: left;
  }

  %customChkRadModifiers--right {
    padding-right: $elementWidth + 0.5;
    text-align: right;
  }

  %customChkRadModifiers--center-up {
    text-align: center;
  }

  %customChkRadModifiers--center-down {
    @extend %customChkRadModifiers--center-up;
  }

  %customChkRadModifiersWrappers {
    padding-left: $elementWidth + rem(0.5);
    @extend %customChkRadModifiers;
  }

  %customChkRadOrigInput {
    @include posAbs(0,false,false,-9999px);
  }

  %customChkRadLabel {
    display: block;
    width: 100%;
  }

  %customChkRadPseudoElement {
    content: '';
    display: block;
    width: $elementWidth;
    height: $elementWidth;    
  }

  %customChkRadradio {
    @extend %radioCustom;
  }

  %customChkRadcheckbox {
    @extend %checkboxCustom;
  }

  %customChkRadActiveradio {
    @extend %radioActiveCustom;
  }

  %customChkRadActivecheckbox {
    @extend %checkboxActiveCustom;
  }

  %customChkRadNotCentered {
    @include posAbs(0);
  }

  %customChkRadCentered {
    @include centerBlock(0,true);
  }

  %customChkRadRegularPos {
    left: 0;
  }

  %customChkRadRightPos {
    right: 0;
  }


  $customFormBlock: form;
  $customFormElement: radio, checkbox;
  $customFormModifier: null, right, center-up, center-down;

  @each $i in $customFormElement {
  // iterate through elements so we can construct the CSS parents

    .#{$customFormBlock}-#{$i} {

      @extend %customChkRadModifiersWrappers;
      
      @each $j in $customFormModifier {
        
        @if $j == center-down or $j == right {
          $pseudoElement: after;
        } @else {
          $pseudoElement: before;
        }

        @if $j == null {
          $modJ: ();
        } @else {
          $modJ: --#{$j};
        }
        
        &#{$modJ} {
          @extend %customChkRadModifiers;
          @extend %customChkRadModifiers--#{$j};

          input[type="#{$i}"] {
            @extend %customChkRadOrigInput;

            &:checked + label:#{$pseudoElement} {
              @extend %customChkRadActive#{$i};
            }
          }

          label {
            @extend %customChkRadLabel;
            
            &:#{$pseudoElement} {
              @extend %customChkRadPseudoElement;
              @extend %customChkRad#{$i};

              @if $j == null or $j == right {
                @extend %customChkRadNotCentered;
              }

              @if $j == null {
                @extend %customChkRadRegularPos;
              }

              @if $j == right {
                @extend %customChkRadRightPos;
              }

              @if $j == center-up or $j == center-down {
                @extend %customChkRadCentered;
              } 
            } // pseudo element CSS block
          } // label CSS block
        } // modifier CSS block

      } // modifier iteration   
    } // element CSS block
  } // element iteration

}



